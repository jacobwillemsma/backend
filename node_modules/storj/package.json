{
  "_args": [
    [
      {
        "hosted": {
          "directUrl": "https://raw.githubusercontent.com/storj/node-libstorj/master/package.json",
          "gitUrl": "git://github.com/storj/node-libstorj.git",
          "httpsUrl": "git+https://github.com/storj/node-libstorj.git",
          "shortcut": "github:storj/node-libstorj",
          "ssh": "git@github.com:storj/node-libstorj.git",
          "sshUrl": "git+ssh://git@github.com/storj/node-libstorj.git",
          "type": "github"
        },
        "name": null,
        "raw": "github:storj/node-libstorj",
        "rawSpec": "github:storj/node-libstorj",
        "scope": null,
        "spec": "github:storj/node-libstorj",
        "type": "hosted"
      },
      "/Users/alexandershevchenko/Desktop/storj1"
    ]
  ],
  "_from": "storj/node-libstorj",
  "_id": "storj@5.0.0-beta",
  "_inCache": true,
  "_installable": true,
  "_location": "/storj",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/storj/node-libstorj/master/package.json",
      "gitUrl": "git://github.com/storj/node-libstorj.git",
      "httpsUrl": "git+https://github.com/storj/node-libstorj.git",
      "shortcut": "github:storj/node-libstorj",
      "ssh": "git@github.com:storj/node-libstorj.git",
      "sshUrl": "git+ssh://git@github.com/storj/node-libstorj.git",
      "type": "github"
    },
    "name": null,
    "raw": "github:storj/node-libstorj",
    "rawSpec": "github:storj/node-libstorj",
    "scope": null,
    "spec": "github:storj/node-libstorj",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/storj/node-libstorj.git#73a97e1533e4645747f516f0165f7e5ffede3079",
  "_shasum": "67643847483991047830197e0e75cf23d6b56ea9",
  "_shrinkwrap": null,
  "_spec": "github:storj/node-libstorj",
  "_where": "/Users/alexandershevchenko/Desktop/storj1",
  "author": {
    "name": "Storj Labs, Inc."
  },
  "bugs": {
    "url": "https://github.com/storj/node-libstorj/issues"
  },
  "contributors": [
    {
      "name": "Braydon Fuller",
      "url": "https://github.com/braydonf"
    },
    {
      "name": "Bryan White",
      "url": "https://github.com/bryanchriswhite"
    },
    {
      "name": "Moby von Briesen",
      "url": "https://github.com/mobyvb"
    }
  ],
  "dependencies": {
    "bindings": "^1.2.1",
    "nan": "^2.6.2"
  },
  "description": "Node.js library for encrypted file transfer on the Storj network.",
  "devDependencies": {
    "basic-auth": "^2.0.0",
    "body-parser": "^1.17.2",
    "chai": "^4.0.2",
    "express": "^4.15.3",
    "mocha": "^3.4.2"
  },
  "gitHead": "73a97e1533e4645747f516f0165f7e5ffede3079",
  "homepage": "https://github.com/storj/node-libstorj#readme",
  "keywords": [
    "storj",
    "encryption",
    "storage"
  ],
  "libstorj": {
    "basePath": "./libstorj-1.1.0-beta",
    "baseUrl": "https://github.com/Storj/libstorj/releases/download/v1.1.0-beta",
    "releases": [
      {
        "arch": "arm",
        "checksum": "4fabbc7fd45d6ca67bcaa0956668451d8d323b4d4c6105b9081b9cbb71c8eaef",
        "filename": "libstorj-1.1.0-beta-linux-armv7.tar.gz",
        "platform": "linux"
      },
      {
        "arch": "ia32",
        "checksum": "1e357a2522c26b11f0ed48a92c6f07567a395bf1924686e1f466f00276d62ac5",
        "filename": "libstorj-1.1.0-beta-linux32.tar.gz",
        "platform": "linux"
      },
      {
        "arch": "x64",
        "checksum": "6bd53c56a9fd43168417263b88add62229bf70f3d3d7dd222550dc99bbc884d5",
        "filename": "libstorj-1.1.0-beta-linux64.tar.gz",
        "platform": "linux"
      },
      {
        "arch": "x64",
        "checksum": "bbaee4a38566920f69a483da946a1b4173dd4507fb9ba7e2ee1966c0b7e8acca",
        "filename": "libstorj-1.1.0-beta-macos.tar.gz",
        "platform": "darwin"
      },
      {
        "arch": "ia32",
        "checksum": "c627f21c9913da6795d4c454e5236f8204567810b9680c5372f76d82a173e3da",
        "filename": "libstorj-1.1.0-beta-win32.zip",
        "platform": "win32"
      },
      {
        "arch": "x64",
        "checksum": "1cb5bbc82d077aa975d4debb490ba38a7cc667f32d93042b67dc9c8b6dfb646a",
        "filename": "libstorj-1.1.0-beta-win64.zip",
        "platform": "win32"
      }
    ]
  },
  "license": "LGPL-3.0",
  "main": "index.js",
  "name": "storj",
  "optionalDependencies": {},
  "readme": "# node-libstorj\n\n[![Build Status](https://travis-ci.org/Storj/node-libstorj.svg?branch=master)](https://travis-ci.org/Storj/node-libstorj)\n\nNode.js library for encrypted file transfer on the Storj network via bindings to [libstorj](https://github.com/Storj/libstorj).\n\n## Example Usage\n\nInstall via npm:\n```\nnpm install github:storj/node-libstorj --save\n```\n\nPlease see [`./examples`](/examples) directory for example code usage.\n\nFirst setup the storj environment with authentication and encryption options:\n\n```js\nconst { Environment } = require('storj');\n\nconst storj = new Environment({\n  bridgeUrl: 'https://api.storj.io',\n  bridgeUser: 'user@domain.com',\n  bridgePass: 'password',\n  encryptionKey: 'abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about',\n  logLevel: 4\n});\n```\n\nUpload a file to a bucket:\n```js\nconst bucketId = '368be0816766b28fd5f43af5';\nconst filePath = './storj-test-upload.data';\n\nconst state = storj.storeFile(bucketId, filePath, {\n  filename: 'storj-test-upload.data',\n  progressCallback: function(progress, downloadedBytes, totalBytes) {\n    console.log('progress:', progress);\n  },\n  finishedCallback: function(err, fileId) {\n    if (err) {\n      return console.error(err);\n    }\n    console.log('File complete:', fileId);\n  }\n});\n\n```\n\nDownload a file from a bucket:\n\n```js\nconst bucketId = '368be0816766b28fd5f43af5';\nconst fileId = '998960317b6725a3f8080c2b';\nconst downloadFilePath = './storj-test-download.data';\n\nconst state = storj.resolveFile(bucketId, fileId, downloadFilePath, {\n  progressCallback: function(progress, downloadedBytes, totalBytes) {\n    console.log('progress:', progress)\n  },\n  finishedCallback: function(err) {\n    if (err) {\n      return console.error(err);\n    }\n    console.log('File download complete');\n  }\n});\n```\n\nOnce finished, you should call to zero and free memory holding encryption keys:\n\n```js\nstorj.destroy();\n```\n\nPlease see [`./examples`](/examples) directory for further usage.\n\n## API\n\n- `.Environment(options)` - A constructor for keeping encryption options and other environment settings, see available methods below\n- `.mnemonicGenerate(bits)` - Will create a new *Encryption Key* string for file encryption/decryption\n- `.mnemonicCheck(encryptionKey)` - Will return boolean to verify that an *Encryption Key* hasn't been typed incorrectly by verifying the checksum and format\n- `.utilTimestamp()` - Returns current unix timestamp in milliseconds\n\nMethods available on an instance of `Environment`:\n\n- `.getInfo(function(err, result) {})` - Gets general API info`\n- `.getBuckets(function(err, result) {})` - Gets list of available buckets\n- `.createBucket(bucketName, function(err, result) {})` - Creates a bucket\n- `.deleteBucket(bucketId, function(err, result) {})` - Deletes a bucket\n- `.listFiles(bucketId, function(err, result) {})` - List files in a bucket\n- `.storeFile(bucketId, filePath, options)` - Uploads a file, returns state object\n- `.storeFileCancel(state)` - This will cancel an upload\n- `.resolveFile(bucketId, fileId, filePath, options)` - Downloads a file, return state object\n- `.resolveFileCancel(state)` - This will cancel a download\n- `.deleteFile(bucketId, fileId, function(err, result) {})` - Deletes a file from a bucket\n- `.destroy()` - This will zero and free memory of encryption keys and the environment\n\n## Development & Testing\n\nIf you do not already have `libstorj` installed on your system, you can install from the directions at https://github.com/Storj/libstorj This isn't required, however it's best for development.\n\nIf you do not have `node-gyp` installed:\n\n```\n$ npm install -g node-gyp\n```\n\nTo build:\n\n```\n$ npm install\n$ node-gyp build\n```\n\nTo test:\n\n```\n$ npm run test\n```\n\nTo test with gdb for debugging:\n```\n$ gdb --args node node_modules/.bin/_mocha -R spec test/index.test.js\n```\n\n## License\n\nCopyright (C) 2017 Storj Labs, Inc\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/storj/node-libstorj.git"
  },
  "scripts": {
    "install": "node-gyp rebuild",
    "preinstall": "node ./download.js",
    "test": "mocha test/**.test.js --recursive"
  },
  "version": "5.0.0-beta"
}
